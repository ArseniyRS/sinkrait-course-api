

generator client{
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model UserModel {
  id          Int @id @default(autoincrement())
  name        String
  email       String
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  comments    CommentModel[]
}


model CategoryModel {
  id          Int @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  categoryId  Int? 
  category    CategoryModel? @relation("CategoryCategory",fields: [categoryId], references: [id])
  categories  CategoryModel[] @relation("CategoryCategory")
  courses     CourseModel[] 
}


model CourseModel {
  id            Int @id @default(autoincrement())
  img           String
  title         String
  description   String
  rate          Int      @default(0)
  price         Decimal  @default(0)
  creditPrice   Decimal  @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  categoryId    Int?
  category      CategoryModel? @relation(fields: [categoryId], references: [id])

  tags          TagModel[] 
  skills        SkillModel[]
  comments      CommentModel[]
  benefits      BenefitModel[]
}

model BenefitModel{
  id            Int @id @default(autoincrement())
  result        String
  courses       CourseModel[]
  benefits      BenefitParametersModel[]
}

model BenefitParametersModel {
  id            Int @id @default(autoincrement())
  title         String
  description   String?
  benefitId     Int?
  benefit       BenefitModel? @relation(fields: [benefitId], references: [id])
}

model TagModel {
  id          Int @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  skills      SkillModel[]
  courses     CourseModel[]
}
model SkillModel{
  tagId       Int
  tag         TagModel @relation(fields: [tagId], references: [id])
  courseId    Int
  course      CourseModel @relation(fields: [courseId], references: [id])

  @@id([courseId, tagId])
}


model CommentModel {
  id          Int @id @default(autoincrement())
  title       String
  content     String
  rate        Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  
  courseId    Int?
  course      CourseModel? @relation(fields: [courseId], references: [id])

  userId      Int
  user        UserModel @relation(fields: [userId], references: [id])
}